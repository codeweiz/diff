import java.text.SimpleDateFormat

// 配置发布
apply plugin: 'java'
apply plugin: 'maven-publish'

// 获取当前日期时间并格式化
def buildTimeStamp() {
    def dateFormat = new SimpleDateFormat('yyyyMMddHHmmss')
    dateFormat.setTimeZone(TimeZone.getTimeZone('UTC'))
    return dateFormat.format(new Date())
}

// 版本号
def majorVersion = project.hasProperty('majorVersion') ? project.property('majorVersion') : '1'
def minorVersion = project.hasProperty('minorVersion') ? project.property('minorVersion') : '0'
def patchVersion = buildTimeStamp()

// 是否为快照版本
def isSnapshot = project.hasProperty('snapshot') ? project.snapshot.toBoolean() : false

// 设置完整版本号
version = isSnapshot ? "${majorVersion}.${minorVersion}.${patchVersion}-SNAPSHOT" : "${majorVersion}.${minorVersion}.${patchVersion}"

// 打印当前使用的版本号
task printVersion {
    doLast {
        println "Current version: ${version}"
        println "Group: ${project.group}"
        println "Publishing to: ${isSnapshot ? 'SNAPSHOT' : 'RELEASE'} repository"
    }
}

// 更新发布前的时间戳版本
tasks.withType(PublishToMavenRepository) {
    doFirst {
        patchVersion = buildTimeStamp()
        project.version = isSnapshot ? "${majorVersion}.${minorVersion}.${patchVersion}-SNAPSHOT" : "${majorVersion}.${minorVersion}.${patchVersion}"
        println "Publishing with version: ${project.version}"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            // 解决方案：添加versionMapping配置，使用已解析的版本号
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'DIFF'
                description = '多人协同差异化分析与处理'
            }
        }
    }

    repositories {
        maven {
            name = "nexus"
            def releasesRepoUrl = "http://192.168.124.23:8081/nexus/repository/maven-releases/"
            def snapshotsRepoUrl = "http://192.168.124.23:8081/nexus/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            // HTTP 下
            allowInsecureProtocol = true

            credentials {
                username = findProperty("nexusUsername") ?: System.getenv("NEXUS_USERNAME")
                password = findProperty("nexusPassword") ?: System.getenv("NEXUS_PASSWORD")
            }
        }
    }
}

// 更新发布前的时间戳版本
tasks.withType(PublishToMavenRepository) {
    doFirst {
        patchVersion = buildTimeStamp()
        project.version = isSnapshot ? "${majorVersion}.${minorVersion}.${patchVersion}-SNAPSHOT" : "${majorVersion}.${minorVersion}.${patchVersion}"
        println "Publishing with version: ${project.version}"
    }
}
